Problem1: Wether some number is fitted or not in datatype.
Sample Input

5
-150
150000
1500000000
213333333333333333333333333333333333
-100000000000000
Sample Output

-150 can be fitted in:
* short
* int
* long
150000 can be fitted in:
* int
* long
1500000000 can be fitted in:
* int
* long
213333333333333333333333333333333333 can't be fitted anywhere.
-100000000000000 can be fitted in:
* long

Solution:
import java.util.Scanner;

public class Solution {

    public static void main(String[] args){
        Scanner scan = new Scanner(System.in);
        int n = scan.nextInt();
        String[] s = new String[n];
        for (int i = 0; i < n; i ++){
            s[i] = scan.next();
        }
        scan.close();
        for (int i = 0; i < n; i ++){
            //System.out.println(s[i] + " can be fitted in: ");
            boolean[] con = new boolean[4];

            try{
                byte sb = Byte.parseByte(s[i]);
                if (sb <= Byte.MAX_VALUE && sb >= Byte.MIN_VALUE){
                    //System.out.println("* short");
                    con[0] = true;
                }
            }catch(NumberFormatException e){
                con[0] = false;
            }

            try{
                short sh = Short.parseShort(s[i]);
                if (sh <= Short.MAX_VALUE && sh >= Short.MIN_VALUE){
                    //System.out.println("* short");
                    con[1] = true;
                }
            }catch(NumberFormatException e){
                con[1] = false;
            }

            try{
                int t = Integer.parseInt(s[i]);
                if (t <= Integer.MAX_VALUE & t >= Integer.MIN_VALUE){
                    //System.out.println("* int");
                    con[2] = true;
                }
            }catch(NumberFormatException e){
                con[2] = false;
            }

            try{
                long lg = Long.parseLong(s[i]);
                if (lg <= Long.MAX_VALUE && lg >= Long.MIN_VALUE){
                    //System.out.println("* long");
                    con[3] = true;
                }
            }catch(NumberFormatException e){
                con[3] = false;
            }
            
            if (con[0] == true || con[1] == true || con[2] == true || con[3]){
                System.out.println(s[i] + " can be fitted in:");
                if (con[0] == true){
                    System.out.println("* byte");
                }
                if (con[1] == true){
                    System.out.println("* short");
                }
                if (con[2] == true){
                    System.out.println("* int");
                }
                if (con[3] == true){
                    System.out.println("* long");
                }
            }else{
                System.out.println(s[i] + " can't be fitted anywhere.");
            }
        }
    }
}
Otherway of solution:
import java.util.Scanner;
public class Solution {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        while (t-- > 0) {
            String s = sc.next();
            try {
                long x = Long.parseLong(s);
                System.out.println(s + " can be fitted in:");
                if (x >= Byte.MIN_VALUE && x <= Byte.MAX_VALUE)
                    System.out.println("* byte");
                if (x >= Short.MIN_VALUE && x <= Short.MAX_VALUE)
                    System.out.println("* short");
                if (x >= Integer.MIN_VALUE && x <= Integer.MAX_VALUE)
                    System.out.println("* int");
                if (x >= Long.MIN_VALUE && x <= Long.MAX_VALUE)
                    System.out.println("* long");
            } catch (Exception e) {
                System.out.println(s + " can't be fitted anywhere.");
            }
        }
        sc.close();
    }
}
